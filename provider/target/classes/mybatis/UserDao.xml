<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zstao.api.mapper.UserDao">
    <resultMap id="BaseUser" type="com.zstao.api.entity.User">
        <id column="uid" jdbcType="INTEGER" property="uid" />
        <result column="uname" jdbcType="VARCHAR" property="uname" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="age" jdbcType="DATE" property="age" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="introduce" jdbcType="VARCHAR" property="introduce" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="user_image" jdbcType="LONGVARBINARY" property="userImage" />
    </resultMap>
    <sql id="Base_Column_List">
        uid, `uname`, `password`, age,email, phone, nickname, sex, introduce, create_date,user_image
    </sql>
    <select id="listUsers" resultMap="BaseUser">
        select
        <include refid="Base_Column_List" />
        from user;
    </select>

    <select id="getUser" parameterType="Integer" resultMap="BaseUser">
        select
        <include refid="Base_Column_List"/>
        from user where uid=#{uid};
    </select>

    <insert id="saveUser" parameterType="com.zstao.api.entity.User">
        insert into user (uname, `password`, age,
                          email, phone, nickname,
                          sex, introduce, create_date,
                          user_image)
        values (#{uname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{age,jdbcType=DATE},
                #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
                #{sex,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
                #{userImage,jdbcType=LONGVARBINARY})
    </insert>

<!--   删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user
        where `uid` = #{uid,jdbcType=INTEGER}
    </delete>

<!--   更新 -->
    <update id="updateUser" parameterType="com.zstao.api.entity.User">
        update user
        set uname = #{uname,jdbcType=VARCHAR},
            `password` = #{password,jdbcType=VARCHAR},
            age = #{age,jdbcType=DATE},
            email = #{email,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            nickname = #{nickname,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=VARCHAR},
            introduce = #{introduce,jdbcType=VARCHAR},
            create_date = #{createDate,jdbcType=TIMESTAMP},
            user_image = #{userImage,jdbcType=LONGVARBINARY}
        where `uid` = #{uid,jdbcType=INTEGER}
    </update>

<!--    查询用户数量-->
    <select id="userNumber" resultType="int">
        select count(*) from user;
    </select>


</mapper>